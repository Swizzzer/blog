---
import type { MarkdownHeading } from 'astro'
import { MediumZoom } from 'astro-pure/advanced'
import { TOC } from 'astro-pure/components/pages'
import { FormattedDate, Icon } from 'astro-pure/user'
import PageLayout from '@/layouts/ContentLayout.astro'
import { Comment, PageInfo } from '@/components/waline'
import { integ } from '@/site-config'

interface Props {
  diary: any
  diaries: any[]
  headings: MarkdownHeading[]
}

const {
  diary: { id, data },
  diaries,
  headings
} = Astro.props

const {
  title,
  date,
  mood,
  weather,
  location,
  tags,
  draft: isDraft
} = data

const socialImage = '/images/social-card.png'
---

<PageLayout meta={{ title, description: `${title} - 日记`, ogImage: socialImage }} back='/diary'>
  {headings?.length && <TOC headings={headings} slot='sidebar' />}
  
  <Fragment slot='header'>
    <!-- Diary Header -->
    <div class='mb-4'>
      <h1 class='text-2xl font-medium sm:mb-2 sm:text-3xl'>
        {isDraft && <span class='text-red-500'>(Draft) </span>}
        {title}
      </h1>
      
      <!-- Diary meta information -->
      <div class='mt-3 flex flex-wrap items-center gap-4 text-sm text-muted-foreground'>
        <div class='flex items-center gap-1'>
          <Icon name='time' class='size-4' />
          <FormattedDate date={date} />
        </div>
        
        {mood && (
          <div class='flex items-center gap-1'>
            <Icon name='bulb' class='size-4' />
            <span>心情：{mood}</span>
          </div>
        )}
        
        {weather && (
          <div class='flex items-center gap-1'>
            <Icon name='sun' class='size-4' />
            <span>天气：{weather}</span>
          </div>
        )}
        
        {location && (
          <div class='flex items-center gap-1'>
            <Icon name='earth' class='size-4' />
            <span>地点：{location}</span>
          </div>
        )}
      </div>

      <!-- Tags -->
      {tags && tags.length > 0 && (
        <div class='mt-3 flex flex-wrap gap-1'>
          {tags.map((tag: string) => (
            <span class='inline-flex items-center px-2 py-1 text-xs bg-muted rounded-md'>
              {tag}
            </span>
          ))}
        </div>
      )}
      
      <PageInfo view comment class='mt-2' />
    </div>
  </Fragment>

  <!-- Main content -->
  <div class='prose prose-lg max-w-none'>
    <slot />
  </div>

  <!-- Navigation to previous/next diary -->
  <Fragment slot='bottom'>
    <div class='mt-8 border-t pt-6'>
      <div class='flex justify-between items-center'>
        {(() => {
          const currentIndex = diaries.findIndex(d => d.id === id)
          const prevDiary = diaries[currentIndex + 1] // Older diary (next in array since sorted by newest first)
          const nextDiary = diaries[currentIndex - 1] // Newer diary (prev in array)
          
          return (
            <>
              <div class='flex-1'>
                {prevDiary && (
                  <a 
                    href={`/diary/${prevDiary.id}`} 
                    class='group inline-flex items-center gap-2 text-sm text-muted-foreground hover:text-primary transition-colors'
                  >
                    <span class='text-lg'>←</span>
                    <div class='flex flex-col'>
                      <span class='text-xs'>上一篇</span>
                      <span class='font-medium'>{prevDiary.data.title}</span>
                    </div>
                  </a>
                )}
              </div>
              
              <div class='flex-1 text-right'>
                {nextDiary && (
                  <a 
                    href={`/diary/${nextDiary.id}`} 
                    class='group inline-flex items-center gap-2 text-sm text-muted-foreground hover:text-primary transition-colors'
                  >
                    <div class='flex flex-col'>
                      <span class='text-xs'>下一篇</span>
                      <span class='font-medium'>{nextDiary.data.title}</span>
                    </div>
                    <span class='text-lg'>→</span>
                  </a>
                )}
              </div>
            </>
          )
        })()}
      </div>
    </div>

    <!-- Comments -->
    {!isDraft && <Comment class='mt-8' />}
  </Fragment>
</PageLayout>

{integ.mediumZoom.enable && <MediumZoom />}